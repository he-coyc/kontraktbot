import os
import time
import vk_api 
import random
import config
import requests
import json
import fake_useragent
from sys import platform
from time import gmtime, strftime
from vk_api import VkApi, VkUpload
from fake_useragent import UserAgent

#–ü–ï–†–ï–ù–û–°–ò–ú –ù–ï–ö–û–¢–û–†–´–ï –î–ê–ù–ù–´–ï –ò–ó –ö–û–ù–§–ò–ì–ê + –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ì–õ–û–ë–ê–õ–¨–ù–´–• –ü–ï–†–ï–ú–ï–ù–ù–´–•
delay = abs(config.Settings.DELAY)
delay_area = abs(config.Settings.DELAY_AREA)
if delay_area > delay:
    delay_area = 0
timeout = config.Settings.TIMEOUT * 60
uid = 0
alltimePosts = []
key_startup = True #–ö–õ–Æ–ß –ó–ê–ñ–ò–ì–ê–ù–ò–Ø
albumID = ''
photoComID = ''
username = ''
comments_counter = 0


def clear(): #–û–ß–ò–©–ê–ï–ú –ö–û–ù–°–û–õ–¨–ö–£
    if platform == "linux" or platform == "linux2":
            os.system('clear')
    elif platform == "win32":
            os.system('cls')

def vk_auth(proxy_session): #–ò–ù–ò–¶–ò–ê–õ–ò–ó–ò–†–£–ï–ú –°–ï–°–°–ò–Æ
    if config.Proxy.using:
        vk_session = vk_api.VkApi(token = config.Settings.TOKEN, session=proxy_session)
    else:
        vk_session = vk_api.VkApi(token = config.Settings.TOKEN)

    vk = vk_session.get_api()
    return vk

def wait(): #–ó–ê–î–ï–ñ–†–ö–ê –ü–ï–†–ï–î –°–õ–ï–î–£–Æ–©–ï–ô –û–¢–ü–†–ê–í–ö–û–ô –ö–û–ù–¢–ï–ù–¢–ê
    time.sleep(delay + random.randint(delay_area * -1,delay_area))

def init_album(api):
    global albumID
    try:
        albumID = api.photos.getAlbums(count=1)['items'][0]['id']
        api.photos.editAlbum(album_id=albumID, title=username, privacy_view='all')
        print('–ê–ª—å–±–æ–º –±—ã–ª –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ ‚úÖ')
    except:
        try:
            albumID = api.photos.createAlbum(title=username)['id']
            print('–ê–ª—å–±–æ–º –±—ã–ª —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ ‚úÖ')
        except:
            print('–ö –∞–ª—å–±–æ–º–∞–º –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –ø–∏–∑–¥–µ—Ü ‚ùóÔ∏è')

def uploadPhotoFromPath(api, path):
    try:
        http = requests.Session()
        values = {}
        response = api.photos.getUploadServer(album_id=albumID)
        url = response['upload_url']
        response = http.post(
                            url,
                            files={'file': open(path, 'rb')}
                            )
        try:
            photo = api.photos.save(**response.json(), album_id=albumID)[0]['id']
            print('–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ ‚úÖ')
            return photo
        except:
            print('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ ‚ùóÔ∏è')
            return 0
    except:
        print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ ‚ùóÔ∏è')
        return 0

def doPrefab(api): #–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –ü–ï–†–§–ê–ë–ê –î–õ–Ø –ù–ê–°–¢–†–û–ô–ö–ò –°–¢–†–ê–ù–ò–ß–ö–ò
    print('–ò–¥–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∞–±–∞...')
    #–°–¢–ê–í–ò–ú –ù–û–í–£–Æ PFP
    if config.Prefab.PFP != '':
        http = requests.Session()
        values = {}
        response = api.photos.getOwnerPhotoUploadServer(**values)
        url = response['upload_url']
        response = http.post(
                            url,
                            files={'file': open(config.Prefab.PFP, 'rb')}
                            )
        api.photos.saveOwnerPhoto(**response.json())
        print('–ê–≤–∞—Ç–∞—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚úÖ')
    #–°–¢–ê–í–ò–ú –ù–û–í–´–ô –°–¢–ê–¢–£–°
    if config.Prefab.STATUS != '':
        api.status.set(text=config.Prefab.STATUS)
        print('–°—Ç–∞—Ç—É—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚úÖ')
    #–°–¢–ê–í–ò–ú –ù–û–í–´–ô –ó–ê–ö–†–ï–ü
    if config.Prefab.PIN_TEXT != '':
        attachments=''
        if config.Prefab.PIN_URL != '':
            attachments = config.Prefab.PIN_URL
        post = post_myWall(api,config.Prefab.PIN_TEXT, attachments)
        api.wall.pin(post_id=post['post_id']) 
        print('–ó–∞–∫—Ä–µ–ø —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚úÖ')
    #–ü–û–î–ü–ò–°–´–í–ê–ï–ú–°–Ø –ù–ê –ù–ê–®–ò –õ–Æ–ë–ò–ú–´–ï –†–ò–§–ú–´ –ò –ü–ê–ù–ß–ò
    if len(config.Prefab.FOLLOW_GROUPS) > 0:
        for i in range (0, len(config.Prefab.FOLLOW_GROUPS),+1):
            try:
                api.groups.join(group_id=config.Prefab.FOLLOW_GROUPS[i])
                time.sleep(1)
            except:
                quecoo = 0
        print('–ü–æ–¥–ø–∏—Å–∫–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω—ã ‚úÖ')
    config.Prefab.using = False
    print('–ü—Ä–µ—Ñ–∞–± –ø—Ä–∏–º–µ–Ω—ë–Ω ‚úÖ\n')

def post_myWall(api, text, attach):
    try:
        if text != '':
            if attach != '':
                post = api.wall.post(message=text, attachments=attach)
            else:
                post = api.wall.post(message=text)
            postID = post['post_id']
            sourceID = api.wall.get(count=1)['items'][0]['from_id']
            print(f'''–°–¥–µ–ª–∞–Ω –ø–æ—Å—Ç ‚úÖ\n  ‚ï† –ê–¥—Ä–µ—Å: https://vk.com/wall{sourceID}_{postID}\n  ‚ïö –¢–µ–∫—Å—Ç: {text}\n''')
            return post
    except:
        print('–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞ ‚ùóÔ∏è')

def randMsg(): #–°–õ–£–ß–ê–ô–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï –ò–ó –°–ü–ò–°–ö–ê
    return random.choice(config.Settings.MESSAGE)

def get_ban(api): #–ü–†–û–í–ï–†–ö–ê –ù–ê –°–û–ë–ê–ß–ö–£
    try:
        test = api.groups.get()
        return True
    except:
        return False

def print_account_info(api):
    global uid, username
    first_name = api.account.getProfileInfo()['first_name']
    last_name = api.account.getProfileInfo()['last_name']
    gender = api.account.getProfileInfo()['sex']
    if gender == 1:
        gender = '–ñ–µ–Ω—Å–∫–∏–π'
    if gender == 2:
        gender = '–ú—É–∂—Å–∫–æ–π'
    if gender == 0:
        gender = '–ù–µ —É–∫–∞–∑–∞–Ω'
    try:
        phone = api.account.getProfileInfo()['phone']
    except:
        phone = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
    uid = api.account.getProfileInfo()['id']
    username = first_name + ' ' + last_name
    print(f'''
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ üìù
‚ïî –ò–º—è: {username}
‚ï† –ü–æ–ª: {gender}
‚ï† –¢–µ–ª–µ—Ñ–æ–Ω: {phone}
‚ï† –í–∞–ª–∏–¥: {get_ban(api)}
‚ïö –°—Å—ã–ª–∫–∞: https://vk.com/id{uid}
''')
    
    
def get_userGroups(api): #–ü–û–î–ì–û–¢–û–í–ö–ê –°–ü–ò–°–ö–ê –ì–†–£–ü–ü –ö –ü–ê–†–°–ò–ù–ì–£
    try:
        grps = api.groups.get()['items'] #–í–û–ó–í–†–ê–©–ê–¢–¨ grps –ï–°–õ–ò –•–û–ß–ï–®–¨ –°–ü–ê–ú –ü–û –ü–û–î–ü–ò–°–ö–ê–ú
        return config.Settings.GROUPS
    except:
        getBannedChokomode()
        return []

def parse_groups(api, groups, timestamp): #–ü–ê–†–°–ò–ù–ì –°–ü–ò–°–ö–ê –ì–†–£–ü–ü –ò –û–¢–ü–†–ê–í–ö–ê –ö–û–ú–ú–ï–ù–¢–û–í
    for i in range (0, len(groups)-1,+1):
        ownerID = groups[i]
        try:
            posts = api.wall.get(owner_id=ownerID, count=config.Settings.POSTOUT)['items']
            if len(posts) > 0:
                for j in range (0, config.Settings.POSTOUT-1, +1):
                    try:
                        if posts[j]['comments']['can_post'] == 1 and posts[j]['date'] > timestamp - timeout: #–ï–°–õ–ò –ú–û–ñ–ù–û –ö–û–ú–ú–ï–ù–¢–ò–¢–¨ –ò –ü–û–°–¢ –ë–´–õ –°–î–ï–õ–ê–ù –ù–ï –ë–û–õ–ï–ï X –ú–ò–ù–£–¢ –ù–ê–ó–ê–î
                            postID = posts[j]['id']
                            if {ownerID, '-', postID} in alltimePosts:
                                None
                            else:
                                attachments=''
                                if config.Settings.MESSAGE_IMG != '':
                                    attachments = f'photo{uid}_{photoComID}'
                                alltimePosts.append({ownerID, '-', postID})
                                try:
                                    do_comment(api, ownerID, postID, randMsg(), attachments)
                                except:
                                    None
                                wait()
                    except:
                        #print('–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è ‚ùóÔ∏è')
                        #print( posts[j]['comments']['can_post'])
                        quecoo = 0
        except:
            quecoo = 0


def do_comment(api, wall, post, text, attach): #–û–¢–ü–†–ê–í–ò–¢–¨ –ö–û–ú–ú–ï–ù–¢
    global comments_counter
    try:
        if attach != '':
            comment = api.wall.createComment(owner_id=wall, post_id=post, message=text, attachments=attach)
        else:
            comment = api.wall.createComment(owner_id=wall, post_id=post, message=text)
        if config.Settings.selflike:
            api.likes.add(type='comment', owner_id=wall, item_id={comment['comment_id']})
        print(f'''
    –ö–æ–º–º–µ–Ω—Ç –æ—Å—Ç–∞–≤–ª–µ–Ω ‚úÖ
    ‚ïî –¢–µ–∫—Å—Ç: "{text}"
    ‚ï† –°—Å—ã–ª–∫–∞: https://vk.com/wall{wall}_{post}?reply={comment['comment_id']}
    ‚ïö –í—Ä–µ–º—è: {strftime('%H:%M:%S')}
    ''')
        comments_counter+=1
    except vk_api.exceptions.Captcha as captcha:
        print(f'''
    –ü–æ—è–≤–∏–ª–∞—Å—å –∫–∞–ø—á–∞ ‚ùóÔ∏è
    ‚ïî –°—Å—ã–ª–∫–∞: {captcha.get_url()}
    ‚ïö –í—Ä–µ–º—è: {strftime('%H:%M:%S')}
''')
        captcha_key = input('‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –∫–∞–ø—á—É:')
        captcha.try_again(captcha_key)
    except vk_api.exceptions.AccountBlocked:
        getBannedChokomode()
    except vk_api.exceptions.VkApiError as e:
        print(e)
    
def getBannedChokomode():
    global comments_counter
    print('üîí –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n‚ïö –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:', comments_counter)
    key_startup = False
    exit()

def start(): #–ó–ê–ü–£–°–ö –≠–¢–û–ô –•–£–ô–ù–ò –ï–ë–ê–ù–û–ô –ù–ê–ß–ò–ù–ê–ï–¢–°–Ø –û–¢–°–Æ–î–ê
    global photoComID
    clear()
    print(f'''
    .-------------------------------.
     | / |‚Äæ| | | ‚ÄæT‚Äæ |‚Äæ| /‚Äæ\ | / ‚ÄæT‚Äæ
     |<  | | |-|  |  |_| |_| |<   |
     | | |_| | |  |  |   | | | |  |
    .-------------------------------.
     K O H T P A K T bot. by he_coyc

–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è
‚ïî –ü—Ä–µ—Ñ–∞–± –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {config.Prefab.using}
‚ï† –ü—Ä–æ–∫—Å–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {config.Proxy.using}
‚ïö –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞: –æ—Ç {delay-delay_area} –¥–æ {delay+delay_area} —Å–µ–∫.''')
    if config.Proxy.using == True: #–ü–û–î–†–£–ë –ü–†–û–ö–°–ò –ü–û –¢–†–ï–ë–û–í–ê–ù–ò–Æ
        session = requests.Session()
        session.proxies = {'http': config.Proxy.ADDRESS, 'https': config.Proxy.ADDRESS}
        agent = fake_useragent.UserAgent()
        agent = agent.random
        session.headers = {'User-Agent': agent}
        api = vk_auth(session)
        print(f'''‚ïî –ê–≥–µ–Ω—Ç: {agent}
‚ïö –¢–µ–∫—É—â–∞—è –ø—Ä–æ–∫—Å–∏ –ª–æ–∫–∞—Ü–∏—è: proxyhere
''')
    else:
        api = vk_auth('')
    try:
        print_account_info(api)
    except:
        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã VK API –ª–∏–±–æ —Ç–æ–∫–µ–Ω –≤–≤–µ–¥—ë–Ω –Ω–µ–æ—Ä—Ä–µ–∫—Ç–Ω–æ ‚ùóÔ∏è')
        exit()

    if get_ban(api) == False: #–ï–°–õ–ò –ê–ö–ö –ù–ï–õ–ò–ö–í–ò–î - –ü–†–û–ì–ê –ü–†–ï–ö–†–ê–©–ê–ï–¢ –í–´–ü–û–õ–ù–ï–ù–ò–ï
        getBannedChokomode()

#    try:
#        print('–ó–∞—è–≤–∫–∞ –Ω–∞ —Å–º–µ–Ω—É –∏–º–µ–Ω–∏ –ø–æ–¥–∞–Ω–∞:', api.account.saveProfileInfo(first_name='–ù–∞—Å—Ç—é—à–∞', last_name='–ê—Å—Ç–∞—Ñ—å–µ–≤–∞', sex=2))
#    except:
#        print('–û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –∏–º–µ–Ω–∏')
#    exit()

    if config.Settings.MESSAGE_IMG != '' or config.Prefab.PFP  !='':
        init_album(api)
    if config.Prefab.using == True: #–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –ü–ï–†–§–ê–ë–ê –ü–û –¢–†–ï–ë–û–í–ê–ù–ò–Æ
        doPrefab(api)
        time.sleep(60)
    if config.Settings.MESSAGE_IMG != '':
        photoComID = uploadPhotoFromPath(api, config.Settings.MESSAGE_IMG)

    while(key_startup):
        timestamp = api.utils.getServerTime()
        parse_groups(api, get_userGroups(api), timestamp)
        wait()

start() #–´–ê–ê–ê –ü–û–ï–•–ê–õ–ò–ô!!!!1!1!11!